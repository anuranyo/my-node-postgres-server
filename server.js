const express = require('express');
const bodyParser = require('body-parser');
const helmet = require('helmet');
const ngrok = require('ngrok');
require('dotenv').config();

const userRoutes = require('./routes/api');
const pool = require('./db/connection'); 

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(bodyParser.json());

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CSP –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ blob –∏ —Å—Ç–∏–ª–µ–π
app.use(
  helmet.contentSecurityPolicy({
    directives: {
      defaultSrc: ["'self'"],
      styleSrc: ["'self'", "'unsafe-inline'", "blob:"],
      scriptSrc: ["'self'", "'unsafe-inline'"],
    },
  })
);



app.use('/users', userRoutes);
app.use('/projects', projectRoutes);



// Error handling middleware
app.use(errorHandler);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Ngrok
const startServer = async () => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await pool.query('SELECT 1');
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    app.listen(PORT, async () => {
      console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);

      // –ü–æ–¥–∫–ª—é—á–∞–µ–º Ngrok
      const ngrokUrl = await ngrok.connect(PORT);
      console.log(`üåê Ngrok –∑–∞–ø—É—â–µ–Ω: ${ngrokUrl}`);
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä—É:', error.message);
    process.exit(1); // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏ –æ—à–∏–±–∫–µ
  }
};

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
startServer();
